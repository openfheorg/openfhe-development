name: Custom

on:
  workflow_dispatch:
    inputs:
      # Selelects the compiler to use, this will be used in the COMPILERS_MAP as the key to
      # retrieve the corresponding cmake compiler options to pass to the action
      compiler:
        type: choice
        description: 'Compiler Type [GCC|CLANG]-Version'
        options:
        - 'GCC-9'
        - 'GCC-10'
        - 'CLANG-10'
        - 'CLANG-11'
        required: true
        default: 'GCC-9'
      native_backend:
        description: 'Size of NativeInteger [32|64|128]'
        type: choice
        options:
        - '32'
        - '64'
        - '128'
        required: true
        default: '64'
      mathbackend:
        type: choice
        description: 'Multiprecision mathbackend (Fixed=2, Dynamic=4, NTL=6)'
        options:
        - 'Fixed'
        - 'Dynamic'
        - 'NTL'
        required: true
        default: 'Fixed'
      with_debug:
        description: 'Build type Debug'
        type: boolean
        required: true
        default: false
      with_tcm:
        description: 'Build with TCMalloc (TCM)'
        type: boolean
        required: true
        default: false
      run_extras:
        description: 'Run build and run extras'
        type: boolean
        required: true
        default: false
      with_nativeopts:
        description: 'Build with native optimizations'
        type: boolean
        required: true
        default: false
      run_benchmark:
        description: 'Run benchmarks'
        type: boolean
        required: true
        default: false

env:
  # JSON map to convert input Compiler Type to correct cmake args, key is the input.compiler and the value is the cmake string to set the compiler for C and C++
  COMPILERS_MAP: >-
    {
      "GCC-9"     : "-DCMAKE_CXX_COMPILER=/usr/bin/g++-9 -DCMAKE_C_COMPILER=/usr/bin/gcc-9",
      "CLANG-10"  : "-DCMAKE_CXX_COMPILER=/usr/bin/clang++-10 -DCMAKE_C_COMPILER=/usr/bin/clang-10",
      "GCC-10"    : "-DCMAKE_CXX_COMPILER=/usr/bin/g++-10 -DCMAKE_C_COMPILER=/usr/bin/gcc-10",
      "CLANG-11"  : "-DCMAKE_CXX_COMPILER=/usr/bin/clang++-11 -DCMAKE_C_COMPILER=/usr/bin/clang-11",
    }
  # The key for this map is the input.mathbackend and the value is the integer value needed for cmake's MATHBACKEND variable.
  MATHBACKEND_MAP: >-
    {
      "Fixed"   : "2",
      "Dynamic" : "4",
      "NTL"     : "6"
    }

jobs:

  ###############################################
  #
  #    default jobs starts here
  #
  ###############################################
  default:
    runs-on: [self-hosted, Linux, X64]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: default
      uses: openfheorg/openfhe-development/.github/actions/default_builder@github-ci
      with:
        module_name: custom_build
        cmake_args: ${{ fromJson(env.COMPILERS_MAP)[github.event.inputs.compiler] }}
        native_backend: ${{ github.event.inputs.native_backend }}
        mathbackend: ${{ fromJson(env.MATHBACKEND_MAP)[github.event.inputs.mathbackend] }}
        with_debug: ${{ github.event.inputs.with_debug }}
        with_tcm: ${{ github.event.inputs.with_tcm }}
        run_extras: ${{ github.event.inputs.run_extras }}
        with_nativeopts: ${{ github.event.inputs.with_nativeopts }}
        run_benchmark: ${{ github.event.inputs.run_benchmark }}
